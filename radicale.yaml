apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-type: "basic"
    nginx.ingress.kubernetes.io/auth-secret: "radicale-secret"
    nginx.ingress.kubernetes.io/auth-realm: "realm string"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header     X-Remote-User $remote_user;

  name: radicale
spec:
  rules:
    - host: calendar-backend.paul-steele.com
      http:
        paths:
          - backend:
              serviceName: radicale
              servicePort: 5232
            path: /
  tls:
    - secretName: paul-steele.com
      hosts:
        - calendar-backend.paul-steele.com
---
apiVersion: v1
kind: Service
metadata:
  name: radicale
spec:
  selector:
    app: radicale
  ports:
    - protocol: TCP
      port: 5232
      targetPort: 5232
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: radicale-configs
data:
  config: |
    # -*- mode: conf -*-
    # vim:ft=cfg

    # Config file for Radicale - A simple calendar server
    #
    # Place it into /etc/radicale/config (global)
    # or ~/.config/radicale/config (user)
    #
    # The current values are the default ones


    [server]

    # CalDAV server hostnames separated by a comma
    # IPv4 syntax: address:port
    # IPv6 syntax: [address]:port
    # For example: 0.0.0.0:9999, [::]:9999
    hosts = 0.0.0.0:5232

    # Max parallel connections
    #max_connections = 8

    # Max size of request body (bytes)
    #max_content_length = 100000000

    # Socket timeout (seconds)
    #timeout = 30

    # Reverse DNS to resolve client address in logs
    #dns_lookup = True


    [encoding]

    # Encoding for responding requests
    #request = utf-8

    # Encoding for storing local collections
    #stock = utf-8


    [auth]

    # Authentication method
    # Value: none | htpasswd | remote_user | http_x_remote_user
    type = http_x_remote_user

    # Htpasswd filename
    htpasswd_filename = /radicale-secret/auth

    # Htpasswd encryption method
    # Value: plain | sha1 | ssha | crypt | bcrypt | md5
    # Only bcrypt can be considered secure.
    # bcrypt and md5 require the passlib library to be installed.
    htpasswd_encryption = md5

    # Incorrect authentication delay (seconds)
    #delay = 1

    # Message displayed in the client when a password is needed
    #realm = Radicale - Password Required

    [rights]

    # Rights backend
    # Value: none | authenticated | owner_only | owner_write | from_file
    type = from_file

    # File for rights management from_file
    file = /config/rights


    [storage]

    # Storage backend
    # Value: multifilesystem
    type = multifilesystem

    # Folder for storing local collections, created if not present
    filesystem_folder = /data/collections

    # Delete sync token that are older (seconds)
    #max_sync_token_age = 2592000

    # Command that is run after changes to storage
    # Example: ([ -d .git ] || git init) && git add -A && (git diff --cached --quiet || git commit -m "Changes by "%(user)s)
    #hook =


    [web]

    # Web interface backend
    # Value: none | internal
    type = internal


    [logging]

    # Threshold for the logger
    # Value: debug | info | warning | error | critical
    #level = info
    debug = true

    # Don't include passwords in logs
    mask_passwords = True


    [headers]

    # Additional HTTP headers
    #Access-Control-Allow-Origin = *

  rights: |
    # The user "admin" can read and write any collection.
    [paul]
    user = paulsteele
    collection = .*
    permission = rw

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radicale
  labels:
    app: radicale
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radicale
  template:
    metadata:
      labels:
        app: radicale
    spec:
      containers:
        - name: radicale
          image: tomsquest/docker-radicale
          ports:
            - containerPort: 5232
          volumeMounts:
            - name: data
              mountPath: "/data/collections"
            - name: htpasswd
              mountPath: "/radicale-secret"
            - name: config
              mountPath: "/config"
      volumes:
        - name: config
          configMap:
            name: radicale-configs
        - name: data
          hostPath:
            type: DirectoryOrCreate
            path: /home/paul/radicale/data
        - name: htpasswd
          secret:
            secretName: radicale-secret
